configfile: "config.yaml"

#Aligning FASTQ reads with BWA MEM and generate SAM/BAM output with samtools
def get_bwa_map_input_fastqs(wildcards):
    return config["samples"][wildcards.sample]

rule bwa_map:
    input:
        ref="../data/references/hg38.fa",
        fastq = get_bwa_map_input_fastqs
    output:
        "../results/mapped_reads/{sample}.bam"
    log:
        "../results/logs/bwa_mem/{sample}.log"
    threads: 8
    shell:
        "(bwa mem -t {threads} {input.ref} {input.fastq} | samtools view -Sb - > {output}) > {log}"

#BAM sorting with samtools
rule samtools_sort:
    input:
        "../results/mapped_reads/{sample}.bam"
    output:
        "../results/sorted_reads/{sample}.bam"
    shell:
        "samtools sort -T ../results/sorted_reads/{wildcards.sample} -O bam {input} > {output}"

#BAM indexing with samtools
rule samtools_index:
    input:
        "../results/sorted_reads/{sample}.bam"
    output:
        "../results/sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"

#Basic vcf call with bcftools
rule bcftools_call:
    input:
        ref="../data/references/hg38.fa",
        bam="../results/sorted_reads/{sample}.bam",
        bai="../results/sorted_reads/{sample}.bam.bai"
        #bam=expand("sorted_reads/{sample}.bam", sample=config["samples"]),
        #bai=expand("sorted_reads/{sample}.bam.bai", sample=config["samples"])
    output:
        "../results/variant_calls/{sample}.vcf"
    shell:
        "bcftools mpileup -d 1000000 -f {input.ref} {input.bam} | "
        "bcftools call -mv > {output}"
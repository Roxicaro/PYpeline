configfile: "config.yaml"
include: "functions.smk" #Python functions

rule bwa_map:
    input:
        ref="../data/references/hg38.fa",
        fastq = get_bwa_map_input_fastqs
    output:
        "../results/mapped_reads/{sample}.bam"
    params:
        rg=r"@RG\tID:{sample}\tSM:{sample}"   
    log:
        "../results/logs/bwa_mem/{sample}.log"
    threads: 8
    shell:
        "(bwa mem -R '{params.rg}' -t {threads} {input.ref} {input.fastq} | samtools view -Sb - > {output}) > {log}"

#BAM sorting with samtools
rule samtools_sort:
    input:
        "../results/mapped_reads/{sample}.bam"
    output:
        "../results/sorted_reads/{sample}.bam"
    shell:
        "samtools sort -T ../results/sorted_reads/{wildcards.sample} -O bam {input} > {output}"

#BAM indexing with samtools
rule samtools_index:
    input:
        "../results/sorted_reads/{sample}.bam"
    output:
        "../results/sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"

#Basic vcf call with bcftools -- Only for pair-ended data
'''
rule bcftools_call:
    input:
        ref="../data/references/hg38.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=config["pe_samples"]),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=config["pe_samples"])
    output:
        "../results/variant_calls/{sample}.vcf"
    run:
        #Check if pair-end or single-read
        if config["seq_type"] == "PE":
            shell(
                "bcftools mpileup -d 1000000 -f {input.ref} {input.bam} | "
                "bcftools call -mv > {output}")
        else:
            pass  # Skip this rule for single-read data
'''

rule gatk_mutect2_tumor_only:
    input:
        ref="../data/references/hg38.fa",
        bam="../results/sorted_reads/{sample}.bam",
        bai="../results/sorted_reads/{sample}.bam.bai",
        bed="../data/bed/OCAPlus.fixed.bed"
    output:
        "../results/variant_calls/{sample}.raw.vcf.gz"
    conda:
        "envs/gatk.yaml"
    shell:
        "gatk Mutect2 -R {input.ref} \
        -I {input.bam} \
        -O {output}"